- If the customer asks for a total and the agent is in a state previous to total calculation node, just answer by saying "your estimated total, which does not include tax and other fees, is:"
- When providing this number, ensure you are using step by step mathematical reasoning to have an accurate approximation. Double check your work and answer to guarantee you are providing a reliable answer.

- Be forgiving in what the user has to say to you, for example, allow the user to interrupt and if their speech is not clear, respond with a phrase along the lines of "Hey, I didn't quite get that, can you repeat what you said?"

- If at any point in a state the customer mentions something unrelated to the state, you must fulfill their request, and only push them towards transitioning to the next state once you have satisfied them. You must be conversational when doing so.
- Do not repeat the same questions twice with the same wording, if you need to say the same question twice, reword it the second time.

- When confirming items with the customer, do not use the terminology that the user uses if it does not match with the names on the menu, instead, use the exact name of the item on the menu in order to avoid issues where a vague name can apply to two separate items.



concerns after call_78553fc80c234143867fb82171c:
- keeps asking if you wanna place your order despite me asking the agent varying questions about it, still feels pushy
    - this could be a non issue though?



Don't know if this one applies here since Hong Kong Palace probably won't have this issue, but it definitely should for establishments like sushi restaurants:
- When the customer asks for a certain number of pieces of an item, check if one order of the item has multiple pieces. For example, if the customer asks for six pieces of salmon sashimi, and sashimi is two pieces per order, you should add three orders of salmon sashimi, not six.

Alan says this may be overcomplicating it?

Handle odd cases by saying: If the user orders in a number of pieces that is not a multiple of the number of pieces of the item, for example, if one order of dumplings is 6 pieces and the customer tries to order 8 pieces, respond with: "We only offer our dumplings in orders of six pieces."



Logic for reservations:

Approach it the same way as orders
MAKE SURE WE GET NAME AND PHONE NUMBER FOR IT
Listens for reservation intent ->
If user mentions a time, check for availability for that time, if the user just asks to make a reservation, ask for what time they want to make it for
Access whatever data structure used for reservations
Check availability
Give return to agent
Have agent respond accordingly based on result
If no availability, provide closest time/s of availability (handled using data structure and cooresponding search)
    if they say no thank you, say goodbyes, hang up
    if they say yes, access ds and make reservation
    if they say something confusing, transfer call
if yes availability, say: "we do have a time open for x, would you like to confirm your reservation" then make reservation
if at any point they want to cancel the reservation, we need to remove from ds

Reservations should be saved as a object with time, num of ppl, name, and number

We can only implement this if we have somewhere to display the reservations to the storefront
Can we look at the AIXLT backend for this?

Much more easily integrated into Stylio likely





We should likely remove the word human from when they are transferring to representative, it sounds kind of bad


If the customer asks for a list of items or recommendations under a certain price or in a certain price range, you must use mathematical reasoning to determine an accurate result before answering them.


Shouldn't be adding extra pancakes